@use 'sass:map';
@use 'sass:list';
@use 'sass:meta';

@import './name.scss';

@function _get-safe-map-value($data-map, $data-key) {
  // 查询对应key
  $result: map.get(
    $map: $data-map,
    $key: $data-key
  );

  // 如果没有寻找到对应key，则抛出错误信息
  @if not $result {
    // 自动组合提示信息
    $valid-keys-string: '[';

    @each $key, $value in $data-map {
      $valid-keys-string: $valid-keys-string + $key + ' ';
    }

    $valid-keys-string: $valid-keys-string + ']';

    @error 'Use key is not valid,it should be in range : ' + $valid-keys-string;
  }

  @return $result;
}

@mixin mix-overflow-ellipsis($line-clamp: 1) {
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;

  /* autoprefixer: ignore next */
  -webkit-box-orient: vertical;
  word-wrap: break-word;
  white-space: normal !important;

  @if ($line-clamp >= 1) {
    -webkit-line-clamp: $line-clamp;
  }

  @else {
    @error 'Use line-clamp is not valid,it should be >= 1';
  }
}

@mixin mix-hide-scrollbar{
  &::-webkit-scrollbar {
    width: 0;
    height: 0;
    color: transparent;
    display: none;
  }
}

@function safe-area-inset-bottom-vars() {
  @return (constant(safe-area-inset-bottom),env(safe-area-inset-bottom));
}

@function safe-area-inset-top-vars() {
  @return (constant(safe-area-inset-top),env(safe-area-inset-top));
}

