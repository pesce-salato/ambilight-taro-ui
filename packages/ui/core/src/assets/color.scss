@use 'sass:map';
@use 'sass:list';

@import './name.scss';
@import './helper.scss';
@import './color-palette.scss';

$_colors-map: (
  'extreme': $_extreme-color-map,
  'white': $_white-gradation-map,
  'black': $_black-gradation-map,
  'gray': $_gray-gradation-map,
  'red': $_red-gradation-map,
  'orange': $_orange-gradation-map,
  'yellow': $_yellow-gradation-map,
  'green': $_green-gradation-map,
  'teal': $_teal-gradation-map,
  'blue': $_blue-gradation-map,
  'cyan': $_cyan-gradation-map,
  'purple': $_purple-gradation-map,
  'pink': $_pink-gradation-map,
);

@function color-palette($color, $gradation) {
  $match-gradation-map: _get-safe-map-value($_colors-map, $color);
  $match-color: _get-safe-map-value($match-gradation-map, '#{$gradation}');

  @return var(#{_get-property-css-var-name('color', '#{$color}-#{$gradation}')}, #{$match-color});
}

$_semantic_color_map: (
  'primary': color-palette('purple', '500'),
  'shadow': color-palette('black', '200'),
  'font-primary': color-palette('gray', '700'),
  'font-primary-reverse': color-palette('extreme', 'white'),
  'mask': color-palette('black', '300'),
  'bg': color-palette('extreme', 'white'),
  'bg-with-opacity': color-palette('white', '800'),
  'bg-reverse': color-palette('extreme', 'black'),
  'bg-reverse-with-opacity': color-palette('black', '800'),
);

@function semantic-color($key) {
  @return var(#{_get-property-css-var-name('semantic-color', '#{$key}')}, #{_get-safe-map-value($_semantic_color_map, $key)});
}
